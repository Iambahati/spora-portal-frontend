{"version":3,"file":"activate-M-DO1dF8.js","sources":["../../router/pages/auth/activate.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { Link, useNavigate, useSearchParams } from \"react-router-dom\"\nimport { useForm } from \"react-hook-form\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport { activatePasswordSchema, type ActivatePasswordFormData } from \"@/lib/validation-schemas\"\nimport { useI18n } from \"@/lib/i18n/context\"\nimport { apiClient } from \"@/lib/api-client\"\n\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Alert, AlertDescription } from \"@/components/ui/alert\"\nimport { Eye, EyeOff, Lock, ArrowRight, AlertCircle, Loader2, CheckCircle2, Mail, RefreshCw } from \"lucide-react\"\nimport RouterAuthLayout from \"@/router/components/router-auth-layout\"\n\ninterface ActivationResponse {\n  success: boolean\n  message: string\n  data?: {\n    user?: any\n  }\n}\n\nexport default function ActivatePage() {\n  const navigate = useNavigate()\n  const [searchParams] = useSearchParams()\n  const { t } = useI18n()\n\n  const [email, setEmail] = useState<string>(\"\")\n  const [token, setToken] = useState<string>(\"\")\n  const [showPassword, setShowPassword] = useState(false)\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false)\n  const [passwordStrength, setPasswordStrength] = useState(0)\n  \n  // State management\n  const [validatingToken, setValidatingToken] = useState(true)\n  const [tokenValid, setTokenValid] = useState(false)\n  const [activationError, setActivationError] = useState<string>(\"\")\n  const [isExpired, setIsExpired] = useState(false)\n  const [submitting, setSubmitting] = useState(false)\n  const [resending, setResending] = useState(false)\n  const [success, setSuccess] = useState(false)\n\n  const form = useForm<ActivatePasswordFormData>({\n    resolver: zodResolver(activatePasswordSchema),\n    defaultValues: {\n      email: \"\",\n      token: \"\",\n      password: \"\",\n      password_confirmation: \"\",\n    },\n  })\n\n  const watchPassword = form.watch(\"password\")\n\n  // Calculate password strength\n  useEffect(() => {\n    let strength = 0\n    if (watchPassword) {\n      if (watchPassword.length >= 8) strength++\n      if (/[A-Z]/.test(watchPassword)) strength++\n      if (/[a-z]/.test(watchPassword)) strength++\n      if (/[0-9]/.test(watchPassword)) strength++\n      if (/[^A-Za-z0-9]/.test(watchPassword)) strength++\n    }\n    setPasswordStrength(strength)\n  }, [watchPassword])\n\n  // Extract query parameters and validate token\n  useEffect(() => {\n    const emailParam = searchParams.get(\"email\")\n    const tokenParam = searchParams.get(\"token\")\n\n    if (!emailParam || !tokenParam) {\n      setValidatingToken(false)\n      setActivationError(\"Missing activation parameters\")\n      return\n    }\n\n    setEmail(emailParam)\n    setToken(tokenParam)\n    \n    // Set form values\n    form.setValue(\"email\", emailParam)\n    form.setValue(\"token\", tokenParam)\n\n    // Validate the activation token\n    validateActivationToken(emailParam, tokenParam)\n  }, [searchParams, form])\n\n  const validateActivationToken = async (email: string, token: string) => {\n    try {\n      setValidatingToken(true)\n      const response = await apiClient.get<ActivationResponse>(`/auth/activate?email=${encodeURIComponent(email)}&token=${encodeURIComponent(token)}`)\n      \n      if (response.success) {\n        setTokenValid(true)\n        setActivationError(\"\")\n      } else {\n        setTokenValid(false)\n        setActivationError(response.message)\n        setIsExpired(response.message.toLowerCase().includes(\"expired\"))\n      }\n    } catch (error: any) {\n      setTokenValid(false)\n      setActivationError(error.message || \"Failed to validate activation link\")\n      setIsExpired(error.message?.toLowerCase().includes(\"expired\") || false)\n    } finally {\n      setValidatingToken(false)\n    }\n  }\n\n  const onSubmit = async (data: ActivatePasswordFormData) => {\n    try {\n      setSubmitting(true)\n      const response = await apiClient.post<ActivationResponse>(\"/auth/activate/update-password\", data)\n      \n      if (response.success) {\n        setSuccess(true)\n        // Redirect to sign in after 2 seconds\n        setTimeout(() => {\n          navigate(\"/auth/signin\", { replace: true })\n        }, 2000)\n      } else {\n        form.setError(\"root\", { message: response.message })\n      }\n    } catch (error: any) {\n      form.setError(\"root\", { message: error.message || \"Failed to update password\" })\n    } finally {\n      setSubmitting(false)\n    }\n  }\n\n  const resendActivationEmail = async () => {\n    try {\n      setResending(true)\n      const response = await apiClient.post<ActivationResponse>(\"/auth/activate/resend\", { email })\n      \n      if (response.success) {\n        setActivationError(\"\")\n        // Show success message temporarily\n        setActivationError(\"Activation email sent successfully. Please check your inbox.\")\n        setTimeout(() => setActivationError(\"\"), 3000)\n      } else {\n        setActivationError(response.message)\n      }\n    } catch (error: any) {\n      setActivationError(error.message || \"Failed to resend activation email\")\n    } finally {\n      setResending(false)\n    }\n  }\n\n  const renderContent = () => {\n    // Loading state\n    if (validatingToken) {\n      return (\n        <Card className=\"bg-white border-0 shadow-2xl rounded-3xl overflow-hidden\">\n          <CardHeader className=\"space-y-3 text-center pb-8 pt-12\">\n            <CardTitle className=\"text-3xl font-bold\">\n              {t(\"auth.activatingAccount\")}\n            </CardTitle>\n            <CardDescription className=\"text-lg text-gray-500\">\n              Please wait while we validate your activation link...\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"px-12 pb-12 text-center\">\n            <Loader2 className=\"mx-auto h-12 w-12 animate-spin text-primary mb-4\" />\n            <p className=\"text-gray-600\">{t(\"common.loading\")}</p>\n          </CardContent>\n        </Card>\n      )\n    }\n\n    // Success state\n    if (success) {\n      return (\n        <Card className=\"bg-white border-0 shadow-2xl rounded-3xl overflow-hidden\">\n          <CardHeader className=\"space-y-3 text-center pb-8 pt-12\">\n            <div className=\"mx-auto w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mb-4\">\n              <CheckCircle2 className=\"h-8 w-8 text-green-600\" />\n            </div>\n            <CardTitle className=\"text-3xl font-bold text-green-600\">\n              {t(\"auth.activationSuccessful\")}\n            </CardTitle>\n            <CardDescription className=\"text-lg text-gray-500\">\n              {t(\"auth.passwordSetSuccessfully\")}\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"px-12 pb-12 text-center\">\n            <p className=\"text-gray-600 mb-6\">{t(\"auth.accountReadyToUse\")}</p>\n            <p className=\"text-sm text-gray-500\">Redirecting to sign in...</p>\n          </CardContent>\n        </Card>\n      )\n    }\n\n    // Error state (invalid or expired token)\n    if (!tokenValid) {\n      return (\n        <Card className=\"bg-white border-0 shadow-2xl rounded-3xl overflow-hidden\">\n          <CardHeader className=\"space-y-3 text-center pb-8 pt-12\">\n            <CardTitle className=\"text-3xl font-bold text-red-600\">\n              {t(\"auth.activationFailed\")}\n            </CardTitle>\n            <CardDescription className=\"text-lg text-gray-500\">\n              {t(\"auth.invalidActivationLink\")}\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"px-12 pb-12 space-y-6\">\n            <Alert variant=\"destructive\" className=\"border-red-200 bg-red-50\">\n              <AlertCircle className=\"h-4 w-4\" />\n              <AlertDescription className=\"text-sm font-medium\">\n                {activationError}\n              </AlertDescription>\n            </Alert>\n\n            {isExpired && email && (\n              <div className=\"text-center space-y-4\">\n                <p className=\"text-gray-600\">{t(\"auth.checkEmailForActivation\")}</p>\n                <Button\n                  onClick={resendActivationEmail}\n                  disabled={resending}\n                  variant=\"outline\"\n                  className=\"w-full h-12 text-base font-semibold rounded-xl border-primary text-primary hover:bg-primary hover:text-primary-foreground\"\n                >\n                  {resending ? (\n                    <>\n                      <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                      {t(\"auth.resendingActivationEmail\")}\n                    </>\n                  ) : (\n                    <>\n                      <RefreshCw className=\"mr-2 h-4 w-4\" />\n                      {t(\"auth.resendActivationEmail\")}\n                    </>\n                  )}\n                </Button>\n              </div>\n            )}\n\n            <div className=\"text-center pt-4 border-t border-gray-200\">\n              <Link\n                to=\"/auth/signin\"\n                className=\"text-primary font-medium hover:text-primary/80 transition-colors\"\n              >\n                {t(\"auth.backToSignIn\")}\n              </Link>\n            </div>\n          </CardContent>\n        </Card>\n      )\n    }\n\n    // Valid token - show password form\n    return (\n      <Card className=\"bg-white border-0 shadow-2xl rounded-3xl overflow-hidden\">\n        <CardHeader className=\"space-y-3 text-center pb-8 pt-12\">\n          <CardTitle className=\"text-3xl font-bold\">\n            {t(\"auth.activateAccount\")}\n          </CardTitle>\n          <CardDescription className=\"text-lg text-gray-500\">\n            {t(\"auth.activateAccountSubtitle\")}\n          </CardDescription>\n        </CardHeader>\n\n        <CardContent className=\"space-y-8 px-12 pb-12\">\n          {/* Form errors */}\n          {form.formState.errors.root && (\n            <Alert variant=\"destructive\" className=\"animate-in fade-in-50 border-red-200 bg-red-50\">\n              <AlertCircle className=\"h-4 w-4\" />\n              <AlertDescription className=\"text-sm font-medium\">\n                {form.formState.errors.root.message}\n              </AlertDescription>\n            </Alert>\n          )}\n\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n            {/* Email display */}\n            <div className=\"space-y-3\">\n              <Label className=\"text-sm font-semibold flex items-center gap-2 text-gray-600\">\n                <Mail className=\"h-4 w-4\" />\n                {t(\"common.email\")}\n              </Label>\n              <div className=\"relative\">\n                <Input\n                  value={email}\n                  disabled\n                  className=\"h-14 text-base border-gray-200 rounded-xl bg-gray-50\"\n                />\n              </div>\n            </div>\n\n            {/* Password input */}\n            <div className=\"space-y-3\">\n              <Label\n                htmlFor=\"password\"\n                className=\"text-sm font-semibold flex items-center gap-2 text-gray-600\"\n              >\n                <Lock className=\"h-4 w-4\" />\n                {t(\"common.password\")}\n              </Label>\n              <div className=\"relative\">\n                <Input\n                  id=\"password\"\n                  type={showPassword ? \"text\" : \"password\"}\n                  placeholder=\"Create a password\"\n                  className=\"h-14 text-base pr-12 border-gray-200 rounded-xl focus:border-transparent focus:ring-2 focus:ring-orange-500/20 transition-all duration-200\"\n                  autoComplete=\"new-password\"\n                  {...form.register(\"password\")}\n                />\n                <Button\n                  type=\"button\"\n                  onClick={() => setShowPassword(!showPassword)}\n                  className=\"absolute right-0 top-0 h-full px-3 bg-transparent border-none text-gray-500 hover:text-primary transition-colors\"\n                  aria-label={showPassword ? \"Hide password\" : \"Show password\"}\n                >\n                  {showPassword ? (\n                    <EyeOff className=\"h-4 w-4\" />\n                  ) : (\n                    <Eye className=\"h-4 w-4\" />\n                  )}\n                </Button>\n              </div>\n\n              {/* Password strength indicator */}\n              {watchPassword && (\n                <div className=\"space-y-1.5 animate-in fade-in-50\">\n                  <div className=\"flex space-x-1\">\n                    {[1, 2, 3, 4, 5].map((level) => (\n                      <div\n                        key={level}\n                        className={`h-1.5 flex-1 rounded-full transition-colors ${\n                          level <= passwordStrength\n                            ? passwordStrength <= 2\n                              ? \"bg-red-400\"\n                              : passwordStrength <= 3\n                              ? \"bg-yellow-400\"\n                              : \"bg-green-400\"\n                            : \"bg-gray-200\"\n                        }`}\n                      />\n                    ))}\n                  </div>\n                  <p className=\"text-xs text-gray-600\">\n                    {passwordStrength === 0 && \"Password strength: Very weak\"}\n                    {passwordStrength === 1 && \"Password strength: Weak\"}\n                    {passwordStrength === 2 && \"Password strength: Fair\"}\n                    {passwordStrength === 3 && \"Password strength: Good\"}\n                    {passwordStrength === 4 && \"Password strength: Strong\"}\n                    {passwordStrength === 5 && \"Password strength: Very strong\"}\n                  </p>\n                </div>\n              )}\n\n              {form.formState.errors.password && (\n                <p className=\"text-sm text-red-500 flex items-center gap-1 animate-in slide-in-from-left-2\">\n                  <AlertCircle className=\"h-3 w-3 flex-shrink-0\" />\n                  <span>{form.formState.errors.password.message}</span>\n                </p>\n              )}\n            </div>\n\n            {/* Confirm Password input */}\n            <div className=\"space-y-3\">\n              <Label\n                htmlFor=\"password_confirmation\"\n                className=\"text-sm font-semibold flex items-center gap-2 text-gray-600\"\n              >\n                <Lock className=\"h-4 w-4\" />\n                {t(\"common.confirmPassword\")}\n              </Label>\n              <div className=\"relative\">\n                <Input\n                  id=\"password_confirmation\"\n                  type={showConfirmPassword ? \"text\" : \"password\"}\n                  placeholder=\"Confirm your password\"\n                  className=\"h-14 text-base pr-12 border-gray-200 rounded-xl focus:border-transparent focus:ring-2 focus:ring-orange-500/20 transition-all duration-200\"\n                  autoComplete=\"new-password\"\n                  {...form.register(\"password_confirmation\")}\n                />\n                <Button\n                  type=\"button\"\n                  onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                  className=\"absolute right-0 top-0 h-full px-3 bg-transparent border-none text-gray-500 hover:text-primary transition-colors\"\n                  aria-label={showConfirmPassword ? \"Hide password confirmation\" : \"Show password confirmation\"}\n                >\n                  {showConfirmPassword ? (\n                    <EyeOff className=\"h-4 w-4\" />\n                  ) : (\n                    <Eye className=\"h-4 w-4\" />\n                  )}\n                </Button>\n              </div>\n              {form.formState.errors.password_confirmation && (\n                <p className=\"text-sm text-red-500 flex items-center gap-1 animate-in slide-in-from-left-2\">\n                  <AlertCircle className=\"h-3 w-3 flex-shrink-0\" />\n                  <span>{form.formState.errors.password_confirmation.message}</span>\n                </p>\n              )}\n            </div>\n\n            {/* Submit button */}\n            <Button\n              type=\"submit\"\n              className=\"w-full h-14 text-lg font-semibold rounded-xl bg-primary hover:bg-primary/90 text-primary-foreground transition-all duration-200 hover:shadow-lg transform hover:-translate-y-0.5\"\n              disabled={submitting}\n            >\n              {submitting ? (\n                <>\n                  <Loader2 className=\"mr-2 h-5 w-5 animate-spin\" />\n                  {t(\"auth.settingPassword\")}\n                </>\n              ) : (\n                <>\n                  {t(\"auth.activateAccount\")}\n                  <ArrowRight className=\"ml-2 h-5 w-5\" />\n                </>\n              )}\n            </Button>\n          </form>\n\n          {/* Sign in link */}\n          <div className=\"text-center pt-4 border-t border-gray-200\">\n            <p className=\"text-sm text-gray-600\">\n              Already activated?{\" \"}\n              <Link\n                to=\"/auth/signin\"\n                className=\"text-primary font-medium hover:text-primary/80 transition-colors hover:underline\"\n              >\n                {t(\"auth.signIn\")}\n              </Link>\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n    )\n  }\n\n  return (\n    <RouterAuthLayout>\n      <div className=\"w-full max-w-md mx-auto\">\n        {/* Mobile branding */}\n        <div className=\"lg:hidden text-center mb-8\">\n          <div className=\"mx-auto mb-4 w-12 h-12 bg-primary rounded-xl flex items-center justify-center\">\n            <span className=\"text-primary-foreground font-bold text-lg\">SB</span>\n          </div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">Spora One Trust</h1>\n          <p className=\"text-gray-600\">Investor Portal</p>\n        </div>\n\n        {renderContent()}\n      </div>\n    </RouterAuthLayout>\n  )\n}\n"],"names":["ActivatePage","navigate","useNavigate","searchParams","useSearchParams","t","useI18n","email","setEmail","useState","token","setToken","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","passwordStrength","setPasswordStrength","validatingToken","setValidatingToken","tokenValid","setTokenValid","activationError","setActivationError","isExpired","setIsExpired","submitting","setSubmitting","resending","setResending","success","setSuccess","form","useForm","zodResolver","activatePasswordSchema","watchPassword","useEffect","strength","emailParam","tokenParam","validateActivationToken","response","apiClient","error","_a","onSubmit","data","resendActivationEmail","renderContent","jsxDEV","Card","CardHeader","CardTitle","CardDescription","CardContent","Loader2","CheckCircle2","Alert","AlertCircle","AlertDescription","Label","Mail","Input","Lock","Button","EyeOff","Eye","level","Fragment","ArrowRight","Link","RefreshCw","RouterAuthLayout"],"mappings":"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"}